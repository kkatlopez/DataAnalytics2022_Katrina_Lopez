summary(weatherWeek) # summary
weatherWeek[1,] # first row and all columns
weatherWeek[, 1] # first column and all rows
weatherWeek[, 'snows']
weatherWeek[, 'days']
weatherWeek[, 'temp']
weatherWeek[1:5, c('days', 'temp')] # rows 1-5 (Mon-Fri) showing days and temp only
weatherWeek$temp
subset(weatherWeek, subset=snows=="T")
sorted.snows <- order(weatherWeek['snows'])
sorted.snows
weatherWeek[sorted.snows,]
dec.snow <- order(weatherWeek) # descending order
dec.snow
empty.DataFrame <- data.frame() # empty data frame
v1 <- 1:10 # numbers 1-10
v1
letters # english alphabet
v2 <- letters[1:10] # first 10 letters (a-j)
df <- data.frame(First10Nums = v1, First10Letters = v2) # first col = First10Nums w/ v1 data; second col = First10Letters w/ v2 data
df
write.csv(df, file='lab0.csv')  # write dataframe to csv
df2 <- read.csv('lab0.csv')
df2
View(df2)
empty.DataFrame <- data.frame() # empty data frame
v1 <- 1:10 # numbers 1-10
v1
letters # english alphabet
v2 <- letters[1:10] # first 10 letters (a-j)
df <- data.frame(First10Nums = v1, First10Letters = v2) # first col = First10Nums w/ v1 data; second col = First10Letters w/ v2 data
df
write.csv(df, file.path(path, "lab0.csv"))  # write dataframe to csv
df2 <- read.csv('lab0.csv')
df2
# View(df2)
# View(df2)
getwd()
setwd(Users/kkatlopez/Desktop)
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') # days
temp <- c(28, 30.5, 32, 31.2, 29.3, 27.9, 26.4) # temp
snows <- c('T', 'T', 'F', 'F', 'T', 'T', 'F') # snowed? T == true, F == false
help('data.frame')
weatherWeek <- data.frame(days, temp, snows)
weatherWeek
head(weatherWeek) # head of frame; it will only show first 6 rows
str(weatherWeek) # structure of frame
summary(weatherWeek) # summary
weatherWeek[1,] # first row and all columns
weatherWeek[, 1] # first column and all rows
weatherWeek[, 'snows']
weatherWeek[, 'days']
weatherWeek[, 'temp']
weatherWeek[1:5, c('days', 'temp')] # rows 1-5 (Mon-Fri) showing days and temp only
weatherWeek$temp
subset(weatherWeek, subset=snows=="T")
sorted.snows <- order(weatherWeek['snows'])
sorted.snows
weatherWeek[sorted.snows,]
dec.snow <- order(weatherWeek) # descending order
dec.snow
empty.DataFrame <- data.frame() # empty data frame
v1 <- 1:10 # numbers 1-10
v1
letters # english alphabet
v2 <- letters[1:10] # first 10 letters (a-j)
df <- data.frame(First10Nums = v1, First10Letters = v2) # first col = First10Nums w/ v1 data; second col = First10Letters w/ v2 data
df
write.csv(df, file='lab0.csv')  # write dataframe to csv
df2 <- read.csv('lab0.csv')
df2
# View(df2)
# View(df2)
getwd()
setwd(Users/kkatlopez/Desktop)
setwd(Desktop)
setwd(/Desktop)
setwd(Desktop)
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') # days
View(df2)
library(readxl)
X2010EPI_data <- read_excel("/Volumes/GoogleDrive/My Drive/! SPRING 22/Data Analytics/2010EPI_data.xls",
sheet = "EPI2010_all countries")
View(X2010EPI_data)
library(readxl)
X2010EPI_data <- read_excel("/Volumes/GoogleDrive/My Drive/! SPRING 22/Data Analytics/2010EPI_data.xls",
sheet = "EPI2010_all countries")
View(X2010EPI_data)
View(X2010EPI_data)
library(readxl)
file_path <- readxl_example(file.choose())
install.packages(readxl)
library(readxl)
file_path <- readxl_example(file.choose())
install.packages(readxl)
library(readxl)
file_path <- readxl_example(file.choose())
install.packages(readxl)
library(readxl)
file_path <- readxl_example(file.choose())
View(X2010EPI_data)
install.packages("tidyverse")
install.packages("tidyverse")
readxl_example()
# install.packages("tidyverse")
readxl_example(file.choose(), sheet='EPI2010_onlyEPIcountries')
# install.packages("tidyverse")
data <- readxl(file.choose(), sheet='EPI2010_onlyEPIcountries')
# install.packages("tidyverse")
data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# install.packages("tidyverse")
data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
data
# install.packages("tidyverse")
data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
View(data)
data1 <- read_xls("2010EPI_data.xls", sheet='EPI2010_onlyEPIcountries')
View(data1)
summary(data$BIODIVERSITY)
fivenum(data$BIODIVERSITY, na.rm=TRUE)
stem(data$BIODIVERSITY)
boxplot(data$BIODIVERSITY)
undergrads <-c('Freshman','Junior', 'Sophomore','Junior','Senior','Sophomore','Junior','Freshman','Senior','Junior')
undergrads
factor.undergrads <-factor(undergrads,ordered = TRUE,levels = c('Freshman','Sophomore','Junior','Senior'))
factor.undergrads
summary(factor.undergrads)
install.packages("ggplot")
install.packages("ggplot")
install.packages("ggplot2")
View(diamonds)
data <- data("diamonds")
View(data)
data("diamonds")
View(diamonds)
help(diamonds)
# install.packages("ggplot")
# install.packages("ggplot2")
library(ggplot)
library(ggplot2)
data <- data("diamonds")
# install.packages("ggplot")
# install.packages("ggplot2")
library(ggplot)
library(ggplot2)
data <- data("diamonds")
View(data)
es("ggplot")
# install.packages(
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot)
library(ggplot2)
data <- data("diamonds")
View(data)
install.packages("ggplot2")
# install.packages("ggplot")
# install.packages("ggplot2")
library(ggplot)
library(ggplot2)
data <- data("diamonds")
View(data)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data <- data("diamonds")
View(data)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data <- data(diamonds)
View(data)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
View(diamonds)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data <- data(diamonds)
View(diamonds)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data <- data(diamonds)
View(data)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data <- data("diamonds")
View(data)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data(diamonds)
View(data)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data("diamonds")
View(data)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
diamonds <- data("diamonds")
View(diamonds)
View(diamonds)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
View(diamonds)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
View(diamonds)
data("diamonds")
View(data("diamonds"))
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data1 <- data("diamonds")
View(data1)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data1 <- data("diamonds")
View(diamonds)
diamondData <- data("diamonds")
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
diamondData <- data("diamonds")
View(diamondData)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
diamondData <- data("diamonds")
print(diamondData)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
diamondData <- data("diamonds")
print(diamonds)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
diamondData <- data("diamonds")
View(diamonds)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
diamondData = data("diamonds")
View(diamondData)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
diamondData <- data("diamonds")
View("diamondData")
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
diamondData <- data("diamonds")
View(diamondData)
# install.packages("ggplot")
# install.packages("ggplot2")
# library(ggplot)
library(ggplot2)
data(diamonds)
View(diamonds)
fivenum(diamonds$x)
fivenum(diamonds$x)
fivenum(diamonds$y)
fivenum(diamonds$z)
fivenum(diamonds$x)
hist(diamonds$x)
hist(diamonds$price)
head(diamonds)
fivenum(diamonds$x)
hist(diamonds$x)
fivenum(diamonds$y)
hist(diamonds$y)
fivenum(diamonds$z)
hist(diamonds$z)
fivenum(diamonds$price)
fivenum(diamonds$price)
hist(diamonds$price)
boxplot(diamonds$price)
ggplot(diamonds$price) + geom_histogram(mapping = aes(x = y), binwidth = 0.5)
rlang::last_error()
ggplot(diamonds) + geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(data = diamonds$price) + geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(data = price) + geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = y), binwidth = 0.25)
fivenum(diamonds$price)
hist(diamonds$price)
boxplot(diamonds$price)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = y), binwidth = 0.1)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = price), binwidth = 0.1)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = price), binwidth = 0.5)
fivenum(diamonds$price)
hist(diamonds$price)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = price), binwidth = 0.5)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = price), binwidth = 1)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = price), binwidth = 1)
ggplot(diamonds) + geom_histogram(mapping = aes(x = price),
binwidth = 0.5) + coord_cartesian(ylim = c(0, 50))
ggplot(diamonds) + geom_histogram(mapping = aes(x = price),
binwidth = 1000) + coord_cartesian(ylim = c(0, 50))
ggplot(diamonds) + geom_histogram(mapping = aes(x = price),
binwidth = 500) + coord_cartesian(ylim = c(0, 50))
ggplot(diamonds) + geom_histogram(mapping = aes(x = price),
binwidth = 10) + coord_cartesian(ylim = c(0, 50))
ggplot(diamonds) + geom_histogram(mapping = aes(x = price),
binwidth = 1) + coord_cartesian(ylim = c(0, 50))
ggplot(diamonds) + geom_histogram(mapping = aes(x = price),
binwidth = 10) + coord_cartesian(ylim = c(0, 50))
diamonds$carat == 0.99
sum(diamonds$carat == 0.99)
sum(diamonds$carat == 1)
ggplot(diamonds) + geom_histogram(mapping = aes(x = price),
binwidth = 10))
ggplot(diamonds) + geom_histogram(mapping = aes(x = price),
binwidth = 10)
sum(diamonds$sum == na.rm)
sum(diamonds$sum == 0)
sum(diamonds$price == 0)
sum(diamonds$price == "")
hist(diamonds$x)
boxplot(diamonds$x)
hist(diamonds$x)
hist(diamonds$y)
hist(diamonds$z)
# library(ggplot)
library(ggplot)
library(ggplot2)
ggplot(data = smaller, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.01)
ggplot(data = diamonds, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.01)
ggplot(data = diamonds, mapping = aes(x = price)) + geom_histogram(binwidth = 0.01)
ggplot(data = diamonds, mapping = aes(x = price)) + geom_histogram(binwidth = 1000)
ggplot(data = x, mapping = aes(x = price)) + geom_histogram(binwidth = 1000)
ggplot(data = diamonds, mapping = aes(x = x)) + geom_histogram(binwidth = 1000)
ggplot(data = diamonds, mapping = aes(x = x)) + geom_histogram(binwidth = 1)
ggplot(data = diamonds, mapping = aes(x = x)) + geom_histogram(binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = x)) + geom_histogram(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = y)) + geom_histogram(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = z)) + geom_histogram(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = y)) + geom_histogram(binwidth = 1)
ggplot(data = diamonds, mapping = aes(x = y)) + geom_histogram(binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = price)) + geom_histogram(binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) + geom_histogram(binwidth = 200)
ggplot(data = diamonds, mapping = aes(x = price)) + geom_histogram(binwidth = 100)
ggplot(data = diamonds, mapping = aes(x = price)) + geom_histogram(binwidth = 50)
ggplot(data = diamonds, mapping = aes(x = price)) + geom_histogram(binwidth = 50)
smaller <- diamonds %>% filter(carat < 3) ggplot(data = smaller, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.1)
smaller <- diamonds %>% filter(carat < 3) ggplot(data = diamonds, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.1)
View(diamonds)
install.packages("dplyr")
install.packages("dplyr")
smaller <- diamonds %>% filter(carat < 3) ggplot(data = diamonds, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.1)
# install.packages("ggplot")
# install.packages("ggplot2")
install.packages("dplyr")
# library(ggplot)
library(ggplot2)
library(dplyr)
data(diamonds)
View(diamonds)
# head(diamonds)
# length, width, height of diamonds?
fivenum(diamonds$x)
hist(diamonds$x)
boxplot(diamonds$x)
fivenum(diamonds$y)
hist(diamonds$y)
fivenum(diamonds$z)
hist(diamonds$z)
ggplot(data = diamonds, mapping = aes(x = x)) + geom_histogram(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = y)) + geom_histogram(binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = z)) + geom_histogram(binwidth = 0.1)
# price - blank space at around price = $1300
fivenum(diamonds$price)
hist(diamonds$price)
boxplot(diamonds$price)
ggplot(data = diamonds, mapping = aes(x = price)) + geom_histogram(binwidth = 50)
# sum of diamonds with 0.99 vs. 1 carat
sum(diamonds$carat == 0.99) # 23
sum(diamonds$carat == 1)    # 1558
smaller <- diamonds %>% filter(carat < 3) ggplot(data = diamonds, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.1)
install.packages("dplyr")
newImmigrantdata <- data.frame(multivariate$Immigrant = c(0,  20))
mm %>% predict(newImmigrantdata)
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
## Part 2, Exercise 2 - Multivariate
multivariate <- read.csv("data/multivariate.csv")
View(multivariate)
attach(multivariate)
help(lm) # linear models
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
mm # coefficients: (intercept) = 107495; multivariate$Immigrant = -6657
summary(mm)$coef # output shows estimate of regression beta coefficients (Estimate) and significance levels (Pr(>|t|))
# therefore, homeowners = 107494.898 + [(-6656.839) * Immigrant]
plot(multivariate$Homeowners~multivariate$Immigrant) # regression plot
help(abline)
abline(mm, col=2, lwd=3) # adds regression line to plot
newImmigrantdata <- data.frame(multivariate$Immigrant = c(0,  20))
mm %>% predict(newImmigrantdata)
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
## Part 2, Exercise 2 - Multivariate
multivariate <- read.csv("data/multivariate.csv")
View(multivariate)
attach(multivariate)
help(lm) # linear models
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
mm # coefficients: (intercept) = 107495; multivariate$Immigrant = -6657
summary(mm)$coef # output shows estimate of regression beta coefficients (Estimate) and significance levels (Pr(>|t|))
# therefore, homeowners = 107494.898 + [(-6656.839) * Immigrant]
plot(multivariate$Homeowners~multivariate$Immigrant) # regression plot
help(abline)
abline(mm, col=2, lwd=3) # adds regression line to plot
newImmigrantdata <- data.frame(multivariate$Immigrant = c(0,  20))
mm %>% predict(newImmigrantdata)
## Part 2, Exercise 2 - ggplot examples
plot(mtcars$wt, mtcars$mpg)
library(ggplot2)
library(dplyr)
qqplot(mtcars$wt, mtcars$mpg)
qqplot(mtcars$wt, mtcars$mpg, data=mtcars)
ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()
plot(pressure$temperature, pressure$pressure, type="l")
points(pressure$temperature, pressure$pressure)
lines(pressure$temperature, pressure$pressure/2, col="red")
points(pressure$temperature, pressure$pressure/2, col="blue")
qplot(pressure$temperature, pressure$pressure/2, geom="line")
qplot(pressure$temperature, pressure$pressure, data=pressure, geom="line")
ggplot(pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point()
## Bar graphs
barplot(BOD$demand, names.arg=BOD$time)
table(mtcars$cyl)
barplot(table(mtcars$cyl)) # generate table of counts
qplot(mtcars$cyl, binwidth=0.5) # changed bin width to 0.5
qplot(factor(mtcars$cyl)) # treat cyl as discrete/quantitative
# Bar graphs of counts
qplot(factor(cyl), data=mtcars)
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar()
## Histograms
hist(mtcars$mpg)
hist(mtcars$mpg, breaks=10) # specify approx. number of bins with breaks
hist(mtcars$mpg, breaks=5)
hist(mtcars$mpg, breaks=12)
qplot(mpg, data=mtcars, binwidth=4)
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=4)
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=5)
## Boxplots
plot(ToothGrowth$supp, ToothGrowth$len) # use plot() and pass it as factor of x-values and vector of y-values
boxplot(len ~ supp, data=ToothGrowth) # if 2 vector are in same dataframe, use this syntax --> combines 2 variables on x-axis
boxplot(len ~ supp + dose, data=ToothGrowth)
# can get the same results as above with qplot
qplot(ToothGrowth$supp, ToothGrowth$len, geom="boxplot")
qplot(supp, len, data=ToothGrowth, geom="boxplot") # if 2 vector are in same dataframe, use this syntax
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot() # equivalent of above with ggplot2
qplot(interaction(ToothGrowth$supp, ToothGrowth$dose), ToothGrowth$len, geom="boxplot") # using 3 separate vectors
qplot(interaction(supp, dose), len, data=ToothGrowth, geom="boxplot") # get columns from dataframe
ggplot(ToothGrowth, aes(x=interaction(supp, dose), y=len)) + geom_boxplot() # equivalent to above with ggplot()
## Part 2, Exercise 2 - Multivariate
multivariate <- read.csv("data/multivariate.csv")
View(multivariate)
attach(multivariate)
help(lm) # linear models
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
mm # coefficients: (intercept) = 107495; multivariate$Immigrant = -6657
summary(mm)$coef # output shows estimate of regression beta coefficients (Estimate) and significance levels (Pr(>|t|))
# therefore, homeowners = 107494.898 + [(-6656.839) * Immigrant]
plot(multivariate$Homeowners~multivariate$Immigrant) # regression plot
help(abline)
abline(mm, col=2, lwd=3) # adds regression line to plot
newImmigrantdata <- data.frame(multivariate$Immigrant = c(0,  20))
mm %>% predict(newImmigrantdata)
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
mm
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
mm
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
multivariate <- read.csv("data/multivariate.csv")
setwd("~/Documents/GitHub/DataAnalytics2022_Katrina_Lopez/lab1")
multivariate <- read.csv("data/multivariate.csv")
multivariate <- read.csv("data/multivariate.csv")
attach(multivariate)
mm <- lm(multivariate$Homeowners~multivariate$Immigrant)
mm # coefficients: (intercept) = 107495; multivariate$Immigrant = -6657
