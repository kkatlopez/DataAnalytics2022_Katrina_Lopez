name(Auto)
names(Auto)
help("Auto")
str(Auto)
summary(Auto)
summary(Auto$mpg)
fivenum(Auto$mpg)
boxplot(Auto$mpg)
boxplot(Auto$mpg)
hist(Auto$mpg)
summary(Auto$horsepower)
mean(Auto$mpg)
median(Auto$mpg) # prints median
help("read.csv")
data1 <- read.csv(file.choose(), header=T)
data1 <- read.csv(file.choose(), header=T)
data1
dim(data1)
View(data1)
summary(EPI)
summary(data1)
summary(EPI)
# summary(EPI) --> shows an error: Error in summary(EPI) : object 'EPI' not found
summary(data1$EPI)
boxplot(EPI)
# boxplot(EPI) --> Error in boxplot(EPI) : object 'EPI' not found
boxplot(data1$EPI)
fivenum(data1$EPI, na.rm=TRUE)
hist(data1$EPI)
data1 <- read.csv(file.choose(), header=T)
# help("read.csv") # read.csv documentation
data1 <- read.csv(file.choose(), header=T) # opens file browser to choose file
# data1 # prints portion of data1 data
dim(data1) # 231 rows, 160 columns --> dimensions of data
View(data1) # loads data as table in new tab
# summary(EPI) --> shows an error: Error in summary(EPI) : object 'EPI' not found
summary(data1$EPI) # --> five number summary for EPI column in data1 data frame + number of NA's
# boxplot(EPI) --> Error in boxplot(EPI) : object 'EPI' not found
boxplot(data1$EPI) # --> box plot for EPI
fivenum(data1$EPI, na.rm=TRUE) # runs five number summary and removes NA values
hist(data1$EPI)
data1 <- read.csv(file.choose(), header=T)
data1 <- read.csv(file.choose(), header=T)
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
data_2010EPI View(data_2010EPI)
data_2010EPI <- read.csv(file.choose(), header=T)
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
data_2010EPI View(data_2010EPI)
data_2010EPI <- read.csv(file.choose(), header=T)
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
data_2010EPI View(data_2010EPI)
install.packages("readxl")
# install.packages("readxl")
library("readxl")
read_excel(file.choose())
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
data_2010EPI View(data_2010EPI)
# install.packages("readxl")
library("readxl")
data_2010EPI <- read_excel(file.choose())
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
data_2010EPI View(data_2010EPI)
# install.packages("readxl")
library("readxl")
data_2010EPI <- read_excel(file.choose())
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
View(data_2010EPI)
# install.packages("readxl")
library("readxl")
data_2010EPI <- read_excel(file.choose())
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
View(data_2010EPI)
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
View(data_2010EPI)
# install.packages("readxl")
library("readxl")
data_2010EPI <- read_excel(file.choose())
View(data_2010EPI)
#
# names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
# data_2010EPI <- data_2010EPI[-1, ]
# data_2010EPI[] <- lapply(data_2010EPI, function(x) type.convert(as.character(x)))
# View(data_2010EPI)
# help("read.csv") # read.csv documentation
data1 <- read.csv(file.choose(), header=T) # opens file browser to choose file
# data1 # prints portion of data1 data
dim(data1) # 231 rows, 160 columns --> dimensions of data
View(data1) # loads data as table in new tab
# summary(EPI) --> shows an error: Error in summary(EPI) : object 'EPI' not found
summary(data1$EPI) # --> five number summary for EPI column in data1 data frame + number of NA's
# boxplot(EPI) --> Error in boxplot(EPI) : object 'EPI' not found
boxplot(data1$EPI) # --> box plot for EPI
fivenum(data1$EPI, na.rm=TRUE) # runs five number summary and removes NA values
hist(data1$EPI)
shapiro.test(data1$DALY)
hist(EPI, seq(30.,95., 1.0), prob=TRUE)
hist(data1, seq(30.,95., 1.0), prob=TRUE)
hist(data1$EPI, seq(30., 95., 1.0), prob=TRUE)
help('data.frame')
# help('data.frame')
weatherWeek <- data.frame(days, temp, snows)
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') # days
temp <- c(28, 30.5, 32, 31.2, 29.3, 27.9, 26.4) # temp
snows <- c('T', 'T', 'F', 'F', 'T', 'T', 'F') # snowed? T == true, F == false
help('data.frame')
weatherWeek <- data.frame(days, temp, snows)
weatherWeek
head(weather_week)
head(weatherWeek)
str(weatherWeek)
summary(weatherWeek)
weatherWeek[1,]
weatherWeek[, 1]
weatherWeek[, 'snows']
weatherWeek[, 'days']
weatherWeek[, 'temp']
weatherWeek[1.5, c('days', 'temp')]
weatherWeek$temp
subset(weatherWeek, subset=snowed==TRUE)
subset(weatherWeek, subset=snows==TRUE)
subset(weatherWeek, subset=snows==T)
subset(weatherWeek, subset=snows=="T")
sorted.snows <- order(weatherWeek['snows'])
sorted.snows
weatherWeek[sorted.snows,]
dec.snow <- order(weatherWeek)
dec.snow
empty.DataFrame <- data.frame()
v1 <- 1:10
v1
letters
v2 <- letters[1:10]
df <- data.frame(col.name.1 = v1, col.name.2 = v2)
df
df2
df
write.csv(df, file='lab0.csv')
df2 <- read.csv('lab0.csv')
df2
View(df2)
weatherWeek[1:5, c('days', 'temp')] # rows 1-5
weatherWeek[1:5, c('days', 'temp', 'snows')] # rows 1-5 showing days and temp
weatherWeek$temp
subset(weatherWeek, subset=snows=="T")
sorted.snows <- order(weatherWeek['snows'])
sorted.snows
dec.snow <- order(weatherWeek) # descending order
dec.snow
letters
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') # days
temp <- c(28, 30.5, 32, 31.2, 29.3, 27.9, 26.4) # temp
snows <- c('T', 'T', 'F', 'F', 'T', 'T', 'F') # snowed? T == true, F == false
help('data.frame')
weatherWeek <- data.frame(days, temp, snows)
weatherWeek
head(weatherWeek) # head of frame; it will only show first 6 rows
str(weatherWeek) # structure of frame
summary(weatherWeek) # summary
weatherWeek[1,] # first row and all columns
weatherWeek[, 1] # first column and all rows
weatherWeek[, 'snows']
weatherWeek[, 'days']
weatherWeek[, 'temp']
weatherWeek[1:5, c('days', 'temp')] # rows 1-5 (Mon-Fri) showing days and temp only
weatherWeek$temp
subset(weatherWeek, subset=snows=="T")
sorted.snows <- order(weatherWeek['snows'])
sorted.snows
weatherWeek[sorted.snows,]
dec.snow <- order(weatherWeek) # descending order
dec.snow
empty.DataFrame <- data.frame() # empty data frame
v1 <- 1:10 # numbers 1-10
v1
letters # english alphabet
v2 <- letters[1:10] # first 10 letters (a-j)
df <- data.frame(col.name.1 = v1, First10Letters = v2)
df
write.csv(df, file='lab0.csv')
df2 <- read.csv('lab0.csv')
df2
View(df2)
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') # days
temp <- c(28, 30.5, 32, 31.2, 29.3, 27.9, 26.4) # temp
snows <- c('T', 'T', 'F', 'F', 'T', 'T', 'F') # snowed? T == true, F == false
help('data.frame')
weatherWeek <- data.frame(days, temp, snows)
weatherWeek
head(weatherWeek) # head of frame; it will only show first 6 rows
str(weatherWeek) # structure of frame
summary(weatherWeek) # summary
weatherWeek[1,] # first row and all columns
weatherWeek[, 1] # first column and all rows
weatherWeek[, 'snows']
weatherWeek[, 'days']
weatherWeek[, 'temp']
weatherWeek[1:5, c('days', 'temp')] # rows 1-5 (Mon-Fri) showing days and temp only
weatherWeek$temp
subset(weatherWeek, subset=snows=="T")
sorted.snows <- order(weatherWeek['snows'])
sorted.snows
weatherWeek[sorted.snows,]
dec.snow <- order(weatherWeek) # descending order
dec.snow
empty.DataFrame <- data.frame() # empty data frame
v1 <- 1:10 # numbers 1-10
v1
letters # english alphabet
v2 <- letters[1:10] # first 10 letters (a-j)
df <- data.frame(First10Nums = v1, First10Letters = v2)
df
write.csv(df, file='lab0.csv')
df2 <- read.csv('lab0.csv')
df2
View(df2)
pwd
getwd
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') # days
temp <- c(28, 30.5, 32, 31.2, 29.3, 27.9, 26.4) # temp
snows <- c('T', 'T', 'F', 'F', 'T', 'T', 'F') # snowed? T == true, F == false
help('data.frame')
weatherWeek <- data.frame(days, temp, snows)
weatherWeek
head(weatherWeek) # head of frame; it will only show first 6 rows
str(weatherWeek) # structure of frame
summary(weatherWeek) # summary
weatherWeek[1,] # first row and all columns
weatherWeek[, 1] # first column and all rows
weatherWeek[, 'snows']
weatherWeek[, 'days']
weatherWeek[, 'temp']
weatherWeek[1:5, c('days', 'temp')] # rows 1-5 (Mon-Fri) showing days and temp only
weatherWeek$temp
subset(weatherWeek, subset=snows=="T")
sorted.snows <- order(weatherWeek['snows'])
sorted.snows
weatherWeek[sorted.snows,]
dec.snow <- order(weatherWeek) # descending order
dec.snow
empty.DataFrame <- data.frame() # empty data frame
v1 <- 1:10 # numbers 1-10
v1
letters # english alphabet
v2 <- letters[1:10] # first 10 letters (a-j)
df <- data.frame(First10Nums = v1, First10Letters = v2) # first col = First10Nums w/ v1 data; second col = First10Letters w/ v2 data
df
write.csv(df, file='lab0.csv')  # write dataframe to csv
df2 <- read.csv('lab0.csv')
df2
View(df2)
empty.DataFrame <- data.frame() # empty data frame
v1 <- 1:10 # numbers 1-10
v1
letters # english alphabet
v2 <- letters[1:10] # first 10 letters (a-j)
df <- data.frame(First10Nums = v1, First10Letters = v2) # first col = First10Nums w/ v1 data; second col = First10Letters w/ v2 data
df
write.csv(df, file.path(path, "lab0.csv"))  # write dataframe to csv
df2 <- read.csv('lab0.csv')
df2
# View(df2)
# View(df2)
getwd()
setwd(Users/kkatlopez/Desktop)
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') # days
temp <- c(28, 30.5, 32, 31.2, 29.3, 27.9, 26.4) # temp
snows <- c('T', 'T', 'F', 'F', 'T', 'T', 'F') # snowed? T == true, F == false
help('data.frame')
weatherWeek <- data.frame(days, temp, snows)
weatherWeek
head(weatherWeek) # head of frame; it will only show first 6 rows
str(weatherWeek) # structure of frame
summary(weatherWeek) # summary
weatherWeek[1,] # first row and all columns
weatherWeek[, 1] # first column and all rows
weatherWeek[, 'snows']
weatherWeek[, 'days']
weatherWeek[, 'temp']
weatherWeek[1:5, c('days', 'temp')] # rows 1-5 (Mon-Fri) showing days and temp only
weatherWeek$temp
subset(weatherWeek, subset=snows=="T")
sorted.snows <- order(weatherWeek['snows'])
sorted.snows
weatherWeek[sorted.snows,]
dec.snow <- order(weatherWeek) # descending order
dec.snow
empty.DataFrame <- data.frame() # empty data frame
v1 <- 1:10 # numbers 1-10
v1
letters # english alphabet
v2 <- letters[1:10] # first 10 letters (a-j)
df <- data.frame(First10Nums = v1, First10Letters = v2) # first col = First10Nums w/ v1 data; second col = First10Letters w/ v2 data
df
write.csv(df, file='lab0.csv')  # write dataframe to csv
df2 <- read.csv('lab0.csv')
df2
# View(df2)
# View(df2)
getwd()
setwd(Users/kkatlopez/Desktop)
setwd(Desktop)
setwd(/Desktop)
setwd(Desktop)
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') # days
View(df2)
library(readxl)
X2010EPI_data <- read_excel("/Volumes/GoogleDrive/My Drive/! SPRING 22/Data Analytics/2010EPI_data.xls",
sheet = "EPI2010_all countries")
View(X2010EPI_data)
library(readxl)
X2010EPI_data <- read_excel("/Volumes/GoogleDrive/My Drive/! SPRING 22/Data Analytics/2010EPI_data.xls",
sheet = "EPI2010_all countries")
View(X2010EPI_data)
View(X2010EPI_data)
library(readxl)
file_path <- readxl_example(file.choose())
install.packages(readxl)
library(readxl)
file_path <- readxl_example(file.choose())
install.packages(readxl)
library(readxl)
file_path <- readxl_example(file.choose())
install.packages(readxl)
library(readxl)
file_path <- readxl_example(file.choose())
View(X2010EPI_data)
install.packages("tidyverse")
install.packages("tidyverse")
readxl_example()
# install.packages("tidyverse")
readxl_example(file.choose(), sheet='EPI2010_onlyEPIcountries')
# install.packages("tidyverse")
data <- readxl(file.choose(), sheet='EPI2010_onlyEPIcountries')
# install.packages("tidyverse")
data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# install.packages("tidyverse")
data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
data
# install.packages("tidyverse")
data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
View(data)
# install.packages("tidyverse")
data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
View(data)
read.csv(file.choose(), header=T)
# install.packages("tidyverse")
data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
View(data)
library(readxl)
X2010EPI_data <- read_excel("/Volumes/GoogleDrive/My Drive/! SPRING 22/Data Analytics/2010EPI_data.xls",
sheet = "EPI2010_onlyEPIcountries")
View(X2010EPI_data)
install.packages("readxl")
install.packages("readxl")
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# install.packages("readxl")
library("readxl")
data <- read_excel(file.choose())
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# install.packages("readxl")
library("readxl")
data <- read_excel(file.choose())
data
source("/Volumes/GoogleDrive/My Drive/! SPRING 22/Data Analytics/epi_excel.R", echo=TRUE)
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# install.packages("readxl")
library("readxl")
data <- read_excel(file.choose(), sheet="EPI2010_onlyEPIcountries")
View(data)
help("read.csv")
help("read.csv")
setwd("/Volumes/GoogleDrive/My Drive/! SPRING 22/Data Analytics")
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# install.packages("readxl")
library("readxl")
data <- read_excel("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
View(data)
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# # install.packages("readxl")
# library("readxl")
# data <- read_excel("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
# View(data)
install.packages("xlsx")
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# # install.packages("readxl")
# library("readxl")
# data <- read_excel("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
# View(data)
# install.packages("xlsx")
library("xlsx")
data <- read.xls("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# # install.packages("readxl")
# library("readxl")
# data <- read_excel("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
# View(data)
# install.packages("xlsx")
library("xlsx")
data <- read.xlsx("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# # install.packages("readxl")
# library("readxl")
# data <- read_excel("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
# View(data)
# install.packages("xlsx")
library("xlsx")
data <- read.xlsx("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
library("xlsx")
data <- read.xlsx("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# # install.packages("readxl")
library("readxl")
data <- read_excel("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
View(data)
my_data <- read.table(pipe("pbpaste"), sep="\t", header = TRUE)
my_data <- read.table(pipe("pbpaste"), sep="\t", header = TRUE)
# # install.packages("tidyverse")
# data <- read_xls(file.choose(), sheet='EPI2010_onlyEPIcountries')
# View(data)
# # install.packages("readxl")
# library("readxl")
# data <- read_excel("2010EPI_data.xls", sheet="EPI2010_onlyEPIcountries")
# View(data)
my_data <- read.table(pipe("pbpaste"), sep="\t", header = TRUE)
View(my_data)
# help("read.csv") # read.csv documentation
data1 <- read.csv(file.choose(), header=T) # opens file browser to choose file
# data1 # prints portion of data1 data
dim(data1) # 231 rows, 160 columns --> dimensions of data
View(data1) # loads data as table in new tab
# summary(EPI) --> shows an error: Error in summary(EPI) : object 'EPI' not found
summary(data1$EPI) # --> five number summary for EPI column in data1 data frame + number of NA's
# boxplot(EPI) --> Error in boxplot(EPI) : object 'EPI' not found
boxplot(data1$EPI) # --> box plot for EPI
fivenum(data1$EPI, na.rm=TRUE) # runs five number summary and removes NA values
hist(data1$EPI)
shapiro.test(data1$DALY) # W, p-value
hist(data1$EPI, seq(30., 95., 1.0), prob=TRUE)
data <- read.csv(file.choose())
# # install.packages("tidyverse")
# data <- read_xls("2010EPI_data.xls", sheet='EPI2010_onlyEPIcountries')
# View(data)
# install.packages("readxl")
library("readxl")
data <- read_excel("EPI_data.xls", sheet="EPI2010_all countries")
View(data)
# install.packages("tidyverse")
data <- read_xls("2010EPI_data.xls", sheet='EPI2010_onlyEPIcountries')
View(data)
# install.packages("readxl")
library("readxl")
data <- read_excel("EPI_data.xls", sheet="EPI2010_all countries")
View(data)
# install.packages("tidyverse")
data1 <- read_xls("2010EPI_data.xls", sheet='EPI2010_onlyEPIcountries')
View(data1)
# install.packages("readxl")
library("readxl")
data2 <- read_excel("EPI_data.xls", sheet="EPI2010_all countries")
View(data2)
library("readxl")
data2 <- read_excel("EPI_data.xls", sheet="EPI2010_all countries")
View(data2)
setwd("~/Documents/GitHub/DataAnalytics2022_Katrina_Lopez/lab0")
# install.packages("tidyverse")
data1 <- read_xls("2010EPI_data.xls", sheet='EPI2010_onlyEPIcountries')
View(data1)
# install.packages("readxl")
library("readxl")
data2 <- read_excel("EPI_data.xls", sheet="EPI2010_all countries")
View(data2)
# install.packages("tidyverse")
data1 <- read_xls("2010EPI_data.xls", sheet='EPI2010_onlyEPIcountries')
View(data1)
# install.packages("readxl")
library("readxl")
data2 <- read_excel("EPI_data.xls", sheet="EPI2010_all countries")
View(data2)
